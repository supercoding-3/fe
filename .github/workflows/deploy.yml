name: CI/CD for React App

on:
  push:
    branches:
      - main
      - dev
  pull_request:
    branches:
      - main
      - dev

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: 버전 정보 추출
        id: extract_version_name
        run: |
          VERSION=$(echo "${{ github.event.head_commit.message }}" | grep -oE '[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}' || echo "")
          if [[ -z "$VERSION" ]]; then
            echo "No version found. Skipping release."
            exit 0
          fi
          echo "VERSION=$VERSION" >> $GITHUB_ENV

      - name: Release 생성
        if: env.VERSION != ''
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
        with:
          tag_name: ${{ env.VERSION }}
          release_name: ${{ env.VERSION }}
          draft: false
          prerelease: false

      - name: Node.js 설정
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Dependencies 설치
        run: npm ci

      - name: Build
        run: CI=false npm run build

      - name: main 브랜치용 CNAME 생성
        if: github.ref == 'refs/heads/main'
        run: echo "https://supercoding-3.github.io/fe/" > build/CNAME

      - name: dev 브랜치용 CNAME 생성
        if: github.ref == 'refs/heads/dev'
        run: echo "https://dev-supercoding-3.github.io/fe/" > build/CNAME

      - name: main 브랜치 GitHub Pages로 배포
        if: github.ref == 'refs/heads/main' && success()
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GH_TOKEN }}
          publish_dir: ./build
          publish_branch: gh-pages

      - name: dev 브랜치 GitHub Pages로 배포
        if: github.ref == 'refs/heads/dev' && success()
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GH_TOKEN }}
          publish_dir: ./build
          publish_branch: gh-pages
